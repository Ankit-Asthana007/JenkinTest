import com.avast.gradle.dockercompose.tasks.ComposeUp

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.avast.gradle.docker-compose' version '0.14.4'
}

group = 'com.ankit'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dockerCompose {
	useComposeFiles = ['src/main/resources/docker-compose.yml']
	startedServices = ['db']
	stopContainers = true
	removeContainers = true
	removeImages = 'None'
	removeVolumes = true
	projectName = 'revision'
	waitForTcpPorts = true
	captureContainersOutput = true
	dockerComposeWorkingDirectory = "${projectDir}"
}

task dockerComposeUp(type: ComposeUp) {
	doFirst {
		project.dockerCompose.up()
	}
}

task dockerComposeDown(type: com.avast.gradle.dockercompose.tasks.ComposeDown) {
	doLast {
		project.dockerCompose.down()
	}
}

test {
	dependsOn dockerComposeUp
	finalizedBy dockerComposeDown
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
